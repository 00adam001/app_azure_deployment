name: 'azure-cd for HW3'

on:
  push:
    branches:
    - main

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: dev

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2
        
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.0.0
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./terraform"

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.0.0
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./terraform"
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      - name: Create and start virtual environment
        run: |
            python -m venv venv
            source venv/bin/activate
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install -U Flask
          
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
            name: python-app
            path: |
              release.zip
              !venv/
        

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
     id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app
      - name: Unzip artifact for deployment
        run: unzip release.zip
        
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'HW3my-app'
          package: HW3my-app.py
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        
